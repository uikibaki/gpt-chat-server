from flask import Flask, request, jsonify
import requests

app = Flask(__name__)

OPENAI_API_KEY = "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"

def ask_gpt(message):
    response = requests.post(
        "https://api.openai.com/v1/chat/completions",
        headers={"Authorization": f"Bearer {OPENAI_API_KEY}"},
        json={
            "model": "gpt-3.5-turbo",
            "messages": [{"role": "user", "content": message}]
        }
    )
    return response.json()["choices"][0]["message"]["content"]

@app.route("/chat", methods=["POST"])
def chat():
    data = request.get_json()
    print("üí¨ Î∞õÏùÄ Îç∞Ïù¥ÌÑ∞:", data)  # <- ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞ ÌôïÏù∏Ïö©

    # ÏùºÎã® Í∏∞Î≥∏ Î©îÏãúÏßÄ ÏßÄÏ†ï
    user_message = "ÏïàÎÖïÌïòÏÑ∏Ïöî. Î¨¥ÏóáÏùÑ ÎèÑÏôÄÎìúÎ¶¥ÍπåÏöî?"

    # utteranceÍ∞Ä Ï°¥Ïû¨ÌïòÎ©¥ Í∑∏Í±∏ ÏÇ¨Ïö©
    if data and "userRequest" in data and "utterance" in data["userRequest"]:
        user_message = data["userRequest"]["utterance"]

    gpt_reply = ask_gpt(user_message)
    
    return jsonify({
        "version": "2.0",
        "template": {
            "outputs": [{
                "simpleText": {
                    "text": gpt_reply
                }
            }]
        }
    })



@app.route("/chat", methods=["POST"])
def chat():
    try:
        data = request.get_json()
        print("üí¨ Î∞õÏùÄ ÏöîÏ≤≠ Îç∞Ïù¥ÌÑ∞:", data)

        user_message = data.get("userRequest", {}).get("utterance", "ÏïàÎÖïÌïòÏÑ∏Ïöî!")

        gpt_reply = ask_gpt(user_message)

        return jsonify({
            "version": "2.0",
            "template": {
                "outputs": [{
                    "simpleText": {
                        "text": gpt_reply
                    }
                }]
            }
        })

    except Exception as e:
        print("‚ùå Ïò§Î•ò Î∞úÏÉù:", str(e))  # ‚Üê Ïó¨Í∏∞Í∞Ä ÌïµÏã¨!
        return jsonify({
            "version": "2.0",
            "template": {
                "outputs": [{
                    "simpleText": {
                        "text": "‚ö†Ô∏è ÏÑúÎ≤Ñ Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏñ¥Ïöî."
                    }
                }]
            }
        }), 500
